# load vim-tmux-navigator plugin keymap
source-file ~/.config/tmux/navigator.tmux

# GENERAL SETTINGS
set -g prefix C-a # Main prefix
set -g base-index 1 # Starting index for new window
set -g pane-base-index 1 # Starting index for new pane
set -g mouse on # Enable mouse
set -g status-keys vi # Copy-paste vi mode for command prompt
setw -g mode-keys vi # Copy-paste vi mode
set -g set-clipboard on # use system clipboard
set -g history-limit 10000 # History limit, default 2000
set -g display-time 1500 # Time for which status line messages and indicators are displayed in miliseconds, 0 means diplay until a key is pressed
set -g default-terminal "${TERM}"
set -sa terminal-features ",*:RGB" # True color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours
setw -g aggressive-resize on # Resize panes on window size change
set -sg escape-time 0 # Time in milliseconds for which tmux waits for escape sequences
set -g detach-on-destroy off # Prevent tmux from closing when last pane is closed
set -g renumber-windows on # Renumber windows after closing one
# For zen-mode.nvim plugin
set-option -g allow-passthrough on # Allow programs in the pane to bypass tmux
set -g focus-events on

# NOTE: just set default name is -
# set-hook -g after-new-session 'rename-window -'
# set-hook -g after-new-window  'rename-window -'

# KEY BINDINGS
unbind s
bind-key "T" choose-tree -sZ -O name

bind-key "K" run-shell "~/scripts/session_manager"

unbind %
bind | split-window -h 

unbind '"'
bind - split-window -v

unbind r
# apply chezmoi if exists, and reload tmux
bind r if-shell "chezmoi apply --force" '' \; source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"

unbind ,
# rename window starting with empty string
bind , command-prompt "rename-window '%%'"

RESIZE_STEP=5
bind -r -T prefix       M-Up              resize-pane -U $RESIZE_STEP
bind -r -T prefix       M-Down            resize-pane -D $RESIZE_STEP
bind -r -T prefix       M-Left            resize-pane -L $RESIZE_STEP
bind -r -T prefix       M-Right           resize-pane -R $RESIZE_STEP

bind -T copy-mode-vi 'v' send -X begin-selection 
bind -T copy-mode-vi 'y' send -X copy-selection 

unbind C-b # Remove the old prefix
bind C-a send-prefix # Send Ctrl+a to applications by pressing it twice (nvim increment)
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt

# APPEARANCE
set -g status-position top
set -g status-style 'bg=default' # transparent
set -g status-interval 10
set -g status-justify left

# colors
FG_MAIN_COLOR="blue"
FG_ACTIVE_TAB_COLOR="color16"
FG_MESSAGE_COLOR="color16"

#       󰇘     
set -g status-left "#[fg=$FG_MAIN_COLOR,bold,bg=default] #{?client_prefix,#[fg=$FG_MESSAGE_COLOR],} #[fg=$FG_MAIN_COLOR]#S     "
set -g status-right "#{pomodoro_status} #(gitmux -cfg $HOME/.config/tmux/gitmux.conf) #[fg=default]#(bleeasy read sweep 2a19 -t '$2%% 🦀 $1%% ' -a)#[fg=default,bold]#(wakatime-cli --today) #{online_status}"

# weather - #(curl "wttr.in/?format=1")
# NOTE: block with rounded corners
# #[fg=#eeeeee,bg=default]#[fg=#000000,bg=#eeeeee]#(wakatime-cli --today)#[fg=#eeeeee,bg=default]

set -g status-left-length 200 # increase length (from 10)
set -g status-right-length 200 # increase length (from 10)
setw -g window-status-current-format "#[fg=$FG_ACTIVE_TAB_COLOR,bg=default,underscore,bold]#I#[nobold]#{?window_name, #W,}#{?window_zoomed_flag, #[bold]Z,}"
setw -g window-status-format '#[fg=gray,underscore,bold]#I#[nobold,nounderscore]#{?window_name,#{?window_last_flag,·, }#W,#{?window_last_flag,·,}}'

setw -g window-status-last-style 'fg=white,bg=default'
setw -g window-status-separator "  "

set -g message-command-style "bg=default,fg=$FG_MESSAGE_COLOR"
set -g message-style "bg=default,fg=$FG_MESSAGE_COLOR"
setw -g mode-style "bg=default,fg=$FG_MESSAGE_COLOR"
setw -g pane-active-border-style 'fg=color16,bg=default'

setw -g pane-border-style 'fg=brightblack,bg=default'

set -ga update-environment EDITOR
# https://yazi-rs.github.io/docs/image-preview/#tmux
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# List of plugins
set -g @plugin 'tmux-plugins/tpm'                # packet manager

set -g @plugin 'wfxr/tmux-fzf-url'               # leader u
set -g @fzf-url-fzf-options '-w 60% -h 40% --multi -0 --no-preview --layout reverse --border bold --border-label " URLs " --info hidden'

set -g @plugin 'muratoffalex/tmux-pomodoro-plus#fix/sound'
set -g @pomodoro_toggle 's'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'S'                    # Cancel the current session
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break
set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 4                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 20            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?
set -g @pomodoro_sound 'pw-play $HOME/assets/sounds/soda.mp3'
set -g @pomodoro_notifications 'on'
set -g @pomodoro_on "#[fg=default] "
set -g @pomodoro_complete "#[fg=green] "
set -g @pomodoro_pause "#[fg=yellow] "
set -g @pomodoro_prompt_break "#[fg=brightwhite]⏲︎ break?"
set -g @pomodoro_prompt_pomodoro "#[fg=brightwhite]⏱︎ start?"
set -g @pomodoro_interval_display "#[fg=brightblack]·%s"

set -g @plugin 'tmux-plugins/tmux-online-status' # internet connection status
set -g @online_icon "#[fg=green,bg=default] "
set -g @offline_icon "#[fg=red,bg=default] "

set -g @plugin 'fcsonline/tmux-thumbs'           # leader space
set -g @thumbs-alphabet colemak
set -g @thumbs-command 'command -v pbcopy >/dev/null 2>&1 && (echo -n {} | pbcopy) || (echo -n {} | wl-copy); tmux display-message "Copied {}"'
run-shell ~/.config/tmux/plugins/tmux-thumbs/tmux-thumbs.tmux

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.config/tmux/plugins/tpm/tpm"
