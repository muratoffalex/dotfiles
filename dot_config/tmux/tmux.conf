# load vim-tmux-navigator plugin keymap
source-file ~/.config/tmux/navigator.tmux

# GENERAL SETTINGS
set -g prefix C-a # Main prefix
set -g base-index 1 # Starting index for new window
set -g pane-base-index 1 # Starting index for new pane
set -g mouse on # Enable mouse
set -g status-keys vi # Copy-paste vi mode for command prompt
setw -g mode-keys vi # Copy-paste vi mode
set -g set-clipboard on # use system clipboard
set -g history-limit 50000 # History limit, default 2000
set -g display-time 1500 # Time for which status line messages and indicators are displayed in miliseconds, 0 means diplay until a key is pressed
set -g default-terminal "screen-256color" # 256 color
set -sa terminal-features ",*256col*:RGB" # True color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours
setw -g aggressive-resize on # Resize panes on window size change
set -sg escape-time 0 # Time in milliseconds for which tmux waits for escape sequences
set -g detach-on-destroy off # Prevent tmux from closing when last pane is closed
set -g renumber-windows on # Renumber windows after closing one
# For zen-mode.nvim plugin
set-option -g allow-passthrough on # Allow programs in the pane to bypass tmux

# NOTE: just set default name is -
# set-hook -g after-new-session 'rename-window -'
# set-hook -g after-new-window  'rename-window -'

# NOTE: automatic window renaming
# set-option -g set-titles off
# set-option -g set-titles-string "#T"
# setw -g automatic-rename-format '#{?#{==:#{pane_current_command},fish},#{b:pane_current_path},#{pane_current_command}}' # Format of automatic window renaming

# KEY BINDINGS
bind s choose-tree -sZ -O name # Choose tree with sort by name

bind-key "T" run-shell "sesh connect \"$(
	sesh list -t | fzf-tmux -p 55%,60% \
		--no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list -t)'
)\""

bind-key "K" display-popup -E -w 40% "sesh connect \"$(
	sesh list -i | gum filter --limit 1 --placeholder 'Pick a sesh' --height 50 --prompt='‚ö°'
)\""

unbind %
bind | split-window -h 

unbind '"'
bind - split-window -v

unbind r
# apply chezmoi if exists, and reload tmux
bind r if-shell "chezmoi apply" '' \; source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"

unbind ,
# rename window starting with empty string
bind , command-prompt "rename-window '%%'"

RESIZE_STEP=5
bind -r -T prefix       M-Up              resize-pane -U $RESIZE_STEP
bind -r -T prefix       M-Down            resize-pane -D $RESIZE_STEP
bind -r -T prefix       M-Left            resize-pane -L $RESIZE_STEP
bind -r -T prefix       M-Right           resize-pane -R $RESIZE_STEP

bind -T copy-mode-vi 'v' send -X begin-selection 
bind -T copy-mode-vi 'y' send -X copy-selection 

unbind C-b # Remove the old prefix
bind C-a send-prefix # Send Ctrl+a to applications by pressing it twice (nvim increment)
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt

# APPEARANCE
set -g status-position top
set -g status-style 'bg=default' # transparent
set -g status-interval 5
set -g status-justify left

# colors
FG_MAIN_COLOR="blue"
FG_ACTIVE_TAB_COLOR="color166" # deep orange (maybe color171 or magenta)
FG_MESSAGE_COLOR="color166"

# Ó©º  ÔÖÅ  Ôëµ  Û∞áò ÔëÑ Ó≠∞ Óûï ÓÇ∂ ÓÇ¥
set -g status-left "#[fg=$FG_MAIN_COLOR,bold,bg=default] #{?client_prefix,#[fg=$FG_MESSAGE_COLOR]Ó©º,Óûï} #[fg=$FG_MAIN_COLOR]#S ÔëÑ    "
set -g status-right "#(gitmux -cfg $HOME/.config/tmux/gitmux.conf) #[bold]#(wakatime-cli --today) #{online_status}"

# weather - #(curl "wttr.in/?format=1")
# NOTE: block with rounded corners
# #[fg=#eeeeee,bg=default]ÓÇ∂#[fg=#000000,bg=#eeeeee]#(wakatime-cli --today)#[fg=#eeeeee,bg=default]ÓÇ¥
# NOTE: version with current date
# set -g status-right "#[fg=$FG_MAIN_COLOR,bold,bg=default]%a %Y-%m-%d Û±ëí %H:%M:%S %p"
# NOTE: version with resource monitor
# set -g status-right "#[fg=$FG_MAIN_COLOR,bold,bg=default]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -v --interval 2)#[default]"

set -g status-left-length 200 # increase length (from 10)
set -g status-right-length 200 # increase length (from 10)
setw -g window-status-current-format "#[fg=$FG_ACTIVE_TAB_COLOR,bg=default,underscore,bold]#I#[nobold]#{?window_name, #W,}#{?window_zoomed_flag, #[bold]Z,}"
setw -g window-status-format '#[fg=gray,underscore,bold]#I#[nobold,nounderscore]#{?window_name,#{?window_last_flag,¬∑, }#W,#{?window_last_flag,¬∑,}}'

setw -g window-status-last-style 'fg=white,bg=default'
setw -g window-status-separator "#[fg=$FG_MAIN_COLOR,bold,bg=default]  "

set -g message-command-style "bg=default,fg=$FG_MESSAGE_COLOR"
set -g message-style "bg=default,fg=$FG_MESSAGE_COLOR"
setw -g mode-style "bg=default,fg=$FG_MESSAGE_COLOR"
setw -g pane-active-border-style 'fg=color202,bg=default'
setw -g pane-border-style 'fg=brightblack,bg=default'

# NOTE: tmux statusbar in 2 lines, second line for padding and prompt
# set -g status 2 # statusbar in 2 lines
# set -g 'status-format[1]' '' # second line empty

# List of plugins
set -g @plugin 'tmux-plugins/tpm'                      # packet manager
set -g @plugin 'joshmedeki/tmux-nerd-font-window-name' # nerd font for window name
set -g @plugin 'tmux-plugins/tmux-online-status'       # internet connection status

# Plugins settings
set -g @online_icon "#[fg=green,bg=default]ÔëÑ "
set -g @offline_icon "#[fg=red,bg=default]ÔëÑ "

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.config/tmux/plugins/tpm/tpm"
