#!/usr/bin/env bash

sesh_connect() {
  sesh list --icons | fzf \
    --tmux='center,40%,50%' \
    --layout reverse \
    --no-sort \
    --ansi \
    --border-label ' sesh ' \
    --prompt '⚡  ' \
    --no-mouse \
    --info hidden \
    --no-separator \
    --border bold \
    --no-scrollbar \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind change:top \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)'
    # --bind 'focus:execute-silent(tmux has-session -t {2..} && sesh connect {2..} 2>/dev/null)' \
}

# initial_session=$(tmux display-message -p '#S')
selected=$(sesh_connect)
if [ -n "$selected" ]; then
  sesh connect "$selected"
# elif [ "$(tmux display-message -p '#S')" != "$initial_session" ]; then
#   sesh connect "$initial_session"
fi
